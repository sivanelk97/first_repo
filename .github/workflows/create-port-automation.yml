name: Create Port Automation

on:
  workflow_dispatch:
    inputs:
      actionTitle:
        description: "Action Title (e.g. Create S3 Bucket)"
        required: true

      category:
        description: "Category object (passed as raw JSON string)"
        required: true

      lead_time_before:
        description: "Optional: lead time before (number)"
        required: false

      cycle_time:
        description: "Optional: cycle time (number)"
        required: false

      port_context:
        description: "Includes blueprint, run ID, and entity identifier from Port"
        required: true

jobs:
  create-automation:
    runs-on: ubuntu-latest

    outputs:
      action_identifier: ${{ steps.generate.outputs.action_identifier }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Derive actionIdentifier from actionTitle
        id: generate
        run: |
          RAW_TITLE="${{ github.event.inputs.actionTitle }}"
          ACTION_IDENTIFIER=$(echo "$RAW_TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/ /_/g')
          echo "ðŸ”¤ Derived identifier: $ACTION_IDENTIFIER"
          echo "action_identifier=$ACTION_IDENTIFIER" >> "$GITHUB_OUTPUT"

      - name: Extract Port run ID
        id: context
        run: |
          echo "run_id=${{ fromJson(github.event.inputs.port_context).runId }}" >> "$GITHUB_OUTPUT"

      - name: Create Port action if it doesn't exist
        env:
          PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
        run: |
          ls
          bash ./scripts/create_port_action_if_missing.sh \
            "${{ steps.generate.outputs.action_identifier }}" \
            "${{ github.event.inputs.actionTitle }}" \
            "${{ steps.context.outputs.run_id }}"

      - name: Create automation in Port
        env:
          PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
        run: |
          bash ./scripts/create_port_automation.sh \
            "${{ steps.generate.outputs.action_identifier }}" \
            "${{ steps.context.outputs.run_id }}"

      - name: Create entity in blueprint 'action'
        env:
          PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
        run: |
          bash ./scripts/create_action_entity.sh \
            "${{ steps.generate.outputs.action_identifier }}" \
            "${{ fromJson(github.event.inputs.category).identifier }}" \
            "${{ github.event.inputs.lead_time_before || '0' }}" \
            "${{ github.event.inputs.cycle_time || '0'  }}" \
            "${{ steps.context.outputs.run_id }}" \
            "${{ github.event.inputs.actionTitle }}"
